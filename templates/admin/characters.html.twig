{% extends 'base.html.twig' %}

{% block title %}Administration Personnages - Chronicles{% endblock %}

{% block page_title %}Gestion des Personnages{% endblock %}

{% block body %}
<div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 2rem;">
    <div>
        <h2 style="margin: 0;">Gestion des Personnages</h2>
        <p style="margin: 0.5rem 0 0 0; color: #666;">Cr√©ez, modifiez et supprimez les personnages de votre univers</p>
    </div>
    <div>
        <a href="{{ path('admin_dashboard') }}" class="btn">‚Üê Retour au Dashboard</a>
        <button onclick="openCharacterModal()" class="btn" style="background: #2ecc71; margin-left: 0.5rem;">+ Nouveau Personnage</button>
    </div>
</div>

<!-- Character Management Interface -->
<div style="background: white; border-radius: 8px; padding: 2rem;">
    
    <!-- Filters and Search -->
    <div style="display: flex; gap: 1rem; margin-bottom: 2rem; padding: 1rem; background: #f8f9fa; border-radius: 6px;">
        <div style="flex: 1;">
            <label style="display: block; margin-bottom: 0.5rem; font-weight: bold;">Rechercher :</label>
            <input type="text" id="character-search" placeholder="Nom du personnage..." style="width: 100%; padding: 0.5rem; border: 1px solid #ddd; border-radius: 4px;">
        </div>
        
        <div style="flex: 1;">
            <label style="display: block; margin-bottom: 0.5rem; font-weight: bold;">Filtrer par Esp√®ce :</label>
            <select id="species-filter" style="width: 100%; padding: 0.5rem; border: 1px solid #ddd; border-radius: 4px;">
                <option value="">Toutes les esp√®ces</option>
                <!-- Options will be populated by JavaScript -->
            </select>
        </div>
        
        <div style="flex: 1;">
            <label style="display: block; margin-bottom: 0.5rem; font-weight: bold;">Filtrer par Race :</label>
            <select id="race-filter" style="width: 100%; padding: 0.5rem; border: 1px solid #ddd; border-radius: 4px;">
                <option value="">Toutes les races</option>
                <!-- Options will be populated by JavaScript -->
            </select>
        </div>
    </div>

    <!-- Characters List -->
    <div id="characters-container">
        <div style="text-align: center; padding: 3rem; color: #666;">
            <span style="font-size: 4rem; opacity: 0.5;">üë•</span>
            <h3>Chargement des personnages...</h3>
            <p>Les personnages seront affich√©s ici une fois les entit√©s Doctrine cr√©√©es</p>
        </div>
    </div>
</div>

<!-- Character Modal (Hidden by default) -->
<div id="character-modal" style="display: none; position: fixed; top: 0; left: 0; width: 100%; height: 100%; background: rgba(0,0,0,0.5); z-index: 1000;">
    <div style="position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); background: white; border-radius: 8px; padding: 2rem; width: 90%; max-width: 600px; max-height: 90%; overflow-y: auto;">
        <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 1.5rem;">
            <h3 id="modal-title">Nouveau Personnage</h3>
            <button onclick="closeCharacterModal()" style="background: none; border: none; font-size: 1.5rem; cursor: pointer;">&times;</button>
        </div>

        <form id="character-form">
            <input type="hidden" id="character-id" name="character_id">
            
            <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 1rem; margin-bottom: 1rem;">
                <div>
                    <label style="display: block; margin-bottom: 0.5rem; font-weight: bold;">Nom du Personnage *</label>
                    <input type="text" id="character-name" name="character_name" required style="width: 100%; padding: 0.5rem; border: 1px solid #ddd; border-radius: 4px;">
                </div>
                
                <div>
                    <label style="display: block; margin-bottom: 0.5rem; font-weight: bold;">√Çge</label>
                    <input type="text" id="character-age" name="age" style="width: 100%; padding: 0.5rem; border: 1px solid #ddd; border-radius: 4px;">
                </div>
            </div>

            <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 1rem; margin-bottom: 1rem;">
                <div>
                    <label style="display: block; margin-bottom: 0.5rem; font-weight: bold;">Race *</label>
                    <select id="character-race" name="race_id" required style="width: 100%; padding: 0.5rem; border: 1px solid #ddd; border-radius: 4px;">
                        <option value="">S√©lectionner une race...</option>
                        <!-- Options will be populated by JavaScript -->
                    </select>
                </div>
                
                <div>
                    <label style="display: block; margin-bottom: 0.5rem; font-weight: bold;">Pays d'origine</label>
                    <input type="text" id="character-country" name="country" style="width: 100%; padding: 0.5rem; border: 1px solid #ddd; border-radius: 4px;">
                </div>
            </div>

            <div style="margin-bottom: 1rem;">
                <label style="display: block; margin-bottom: 0.5rem; font-weight: bold;">Habitat</label>
                <input type="text" id="character-habitat" name="habitat" style="width: 100%; padding: 0.5rem; border: 1px solid #ddd; border-radius: 4px;">
            </div>

            <div style="margin-bottom: 1rem;">
                <label style="display: block; margin-bottom: 0.5rem; font-weight: bold;">Ic√¥ne du Personnage</label>
                <input type="file" id="character-icon" name="character_icon" accept="image/*" style="width: 100%; padding: 0.5rem; border: 1px solid #ddd; border-radius: 4px;">
                <small style="color: #666;">Maximum 5 Mo - Formats accept√©s: JPG, PNG, GIF</small>
            </div>

            <div style="margin-bottom: 1.5rem;">
                <label style="display: block; margin-bottom: 0.5rem; font-weight: bold;">Description</label>
                <textarea id="character-description" name="description" rows="4" style="width: 100%; padding: 0.5rem; border: 1px solid #ddd; border-radius: 4px; resize: vertical;"></textarea>
            </div>

            <div style="display: flex; gap: 1rem; justify-content: flex-end;">
                <button type="button" onclick="closeCharacterModal()" class="btn" style="background: #6c757d;">Annuler</button>
                <button type="button" onclick="deleteCurrentCharacter()" id="delete-btn" style="display: none;" class="btn" style="background: #dc3545;">Supprimer</button>
                <button type="submit" class="btn" style="background: #2ecc71;">Enregistrer</button>
            </div>
        </form>
    </div>
</div>

{% endblock %}

{% block javascripts %}
{{ parent() }}
<script>
let currentCharacterId = null;

function openCharacterModal(characterId = null) {
    currentCharacterId = characterId;
    
    if (characterId) {
        // Edit mode
        document.getElementById('modal-title').textContent = 'Modifier le Personnage';
        document.getElementById('delete-btn').style.display = 'inline-block';
        loadCharacterData(characterId);
    } else {
        // Create mode
        document.getElementById('modal-title').textContent = 'Nouveau Personnage';
        document.getElementById('delete-btn').style.display = 'none';
        clearCharacterForm();
    }
    
    document.getElementById('character-modal').style.display = 'block';
}

function closeCharacterModal() {
    document.getElementById('character-modal').style.display = 'none';
    clearCharacterForm();
}

function clearCharacterForm() {
    document.getElementById('character-form').reset();
    document.getElementById('character-id').value = '';
}

function loadCharacterData(characterId) {
    // TODO: Load character data via AJAX when backend is ready
    console.log('Loading character data for ID:', characterId);
    
    // Placeholder - this will be replaced with real AJAX call
    alert('Fonction de chargement des donn√©es du personnage √† impl√©menter');
}

function deleteCurrentCharacter() {
    if (currentCharacterId && confirm('√ätes-vous s√ªr de vouloir supprimer ce personnage ?')) {
        // TODO: Implement character deletion
        alert('Fonction de suppression √† impl√©menter (ID: ' + currentCharacterId + ')');
        closeCharacterModal();
    }
}

function loadCharactersList() {
    // TODO: Load characters list via AJAX when backend is ready
    console.log('Loading characters list...');
    
    // Placeholder content
    const container = document.getElementById('characters-container');
    container.innerHTML = `
        <div style="text-align: center; padding: 3rem; color: #666;">
            <span style="font-size: 4rem; opacity: 0.5;">üë•</span>
            <h3>Personnages √† charger</h3>
            <p>La liste des personnages sera affich√©e ici une fois les entit√©s Doctrine cr√©√©es et les donn√©es migr√©es.</p>
            <p><em>En attendant, vous pouvez cr√©er la structure avec le bouton "Nouveau Personnage"</em></p>
        </div>
    `;
}

function loadFormOptions() {
    // TODO: Load species and races for form dropdowns
    console.log('Loading form options...');
}

// Character form submission
document.getElementById('character-form').addEventListener('submit', function(e) {
    e.preventDefault();
    
    // TODO: Submit character data via AJAX when backend is ready
    const formData = new FormData(this);
    console.log('Character form data:', Object.fromEntries(formData.entries()));
    
    alert('Fonction de sauvegarde du personnage √† impl√©menter');
    closeCharacterModal();
});

// Search and filter functionality
document.getElementById('character-search').addEventListener('input', function() {
    // TODO: Implement character search
    console.log('Searching for:', this.value);
});

document.getElementById('species-filter').addEventListener('change', function() {
    // TODO: Filter characters by species
    console.log('Filtering by species:', this.value);
});

document.getElementById('race-filter').addEventListener('change', function() {
    // TODO: Filter characters by race
    console.log('Filtering by race:', this.value);
});

// Initialize the page
document.addEventListener('DOMContentLoaded', function() {
    loadCharactersList();
    loadFormOptions();
});

// Close modal when clicking outside
document.getElementById('character-modal').addEventListener('click', function(e) {
    if (e.target === this) {
        closeCharacterModal();
    }
});
</script>
{% endblock %}